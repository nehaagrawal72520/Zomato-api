<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="15" passed="15">
  <reporter-output>
    <line>
      <![CDATA[=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
]]>
    </line>
    <line>
      <![CDATA[Response Body Json: 200]]>
    </line>
    <line>
      <![CDATA[
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=]]>
    </line>
    <line>
      <![CDATA[Response is correct with userkey and city name]]>
    </line>
    <line>
      <![CDATA[=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
]]>
    </line>
    <line>
      <![CDATA[Response Body Json: 200]]>
    </line>
    <line>
      <![CDATA[
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=]]>
    </line>
    <line>
      <![CDATA[Response is correct with user key,latitude and longitude]]>
    </line>
    <line>
      <![CDATA[=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
]]>
    </line>
    <line>
      <![CDATA[Response Body Json: 200]]>
    </line>
    <line>
      <![CDATA[
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=]]>
    </line>
    <line>
      <![CDATA[Response is correct with user keyand cityid]]>
    </line>
    <line>
      <![CDATA[=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
]]>
    </line>
    <line>
      <![CDATA[Response Body Json: {
  "location_suggestions": [
    {
      "id": 4,
      "name": "Bengaluru",
      "country_id": 1,
      "country_name": "India",
      "country_flag_url": "https://b.zmtcdn.com/images/countries/flags/country_1.png",
      "should_experiment_with": 0,
      "has_go_out_tab": 0,
      "discovery_enabled": 0,
      "has_new_ad_format": 1,
      "is_state": 0,
      "state_id": 0,
      "state_name": "",
      "state_code": ""
    },
    {
      "id": 5,
      "name": "Pune",
      "country_id": 1,
      "country_name": "India",
      "country_flag_url": "https://b.zmtcdn.com/images/countries/flags/country_1.png",
      "should_experiment_with": 0,
      "has_go_out_tab": 0,
      "discovery_enabled": 0,
      "has_new_ad_format": 1,
      "is_state": 0,
      "state_id": 0,
      "state_name": "",
      "state_code": ""
    },
    {
      "id": 7,
      "name": "Chennai",
      "country_id": 1,
      "country_name": "India",
      "country_flag_url": "https://b.zmtcdn.com/images/countries/flags/country_1.png",
      "should_experiment_with": 0,
      "has_go_out_tab": 0,
      "discovery_enabled": 0,
      "has_new_ad_format": 1,
      "is_state": 0,
      "state_id": 0,
      "state_name": "",
      "state_code": ""
    }
  ],
  "status": "success",
  "has_more": 0,
  "has_total": 0,
  "user_has_addresses": true
}]]>
    </line>
    <line>
      <![CDATA[
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=]]>
    </line>
    <line>
      <![CDATA[=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
]]>
    </line>
    <line>
      <![CDATA[Response Body Json: {
  "code": 403,
  "status": "Forbidden",
  "message": "Invalid API Key"
}]]>
    </line>
    <line>
      <![CDATA[
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=]]>
    </line>
    <line>
      <![CDATA[Invalid api key]]>
    </line>
    <line>
      <![CDATA[=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
]]>
    </line>
    <line>
      <![CDATA[Response Body Json: 200]]>
    </line>
    <line>
      <![CDATA[
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=]]>
    </line>
    <line>
      <![CDATA[=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
]]>
    </line>
    <line>
      <![CDATA[Response Body Json: 200]]>
    </line>
    <line>
      <![CDATA[
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=]]>
    </line>
    <line>
      <![CDATA[getting success response]]>
    </line>
    <line>
      <![CDATA[=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
]]>
    </line>
    <line>
      <![CDATA[Response Body Json: {
  "code": 400,
  "status": "Bad Request",
  "message": "No Daily Menu Available"
}]]>
    </line>
    <line>
      <![CDATA[
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=]]>
    </line>
    <line>
      <![CDATA[No daily menu available with invalid entity-id]]>
    </line>
    <line>
      <![CDATA[=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
]]>
    </line>
    <line>
      <![CDATA[Response Body Json: {
  "daily_menus": [
    {
      "daily_menu": {
        "daily_menu_id": "20951458",
        "start_date": "2020-07-14 00:00:00",
        "end_date": "2020-07-14 23:59:59",
        "name": "",
        "dishes": [
          {
            "dish": {
              "dish_id": "705488337",
              "name": "Čočková polévka s uzeninou",
              "price": "45 Kč"
            }
          },
          {
            "dish": {
              "dish_id": "705488338",
              "name": "Lentil soup with sausage",
              "price": "45 Kč"
            }
          },
          {
            "dish": {
              "dish_id": "705488339",
              "name": "Deep fried pork meatball with cheese, mashed potatoes and pickles",
              "price": "135 Kč"
            }
          },
          {
            "dish": {
              "dish_id": "705488340",
              "name": "Hovězí maso stroganoff, rýže basmati",
              "price": "149 Kč"
            }
          },
          {
            "dish": {
              "dish_id": "705488341",
              "name": "Beef stroganoff with basmati rice",
              "price": "149 Kč"
            }
          },
          {
            "dish": {
              "dish_id": "705488342",
              "name": "Bryndzové halušky s osmaženou cibulkou, se slaninou nebo bez",
              "price": "129 Kč"
            }
          },
          {
            "dish": {
              "dish_id": "705488343",
              "name": "Slovak style gnocchi with sheep cheese and fried onions, with or without bacon",
              "price": "129 Kč"
            }
          },
          {
            "dish": {
              "dish_id": "705488344",
              "name": "Smažený vepřový karbanátek se sýrem, bramborová kaše, kyselá okurka",
              "price": "135 Kč"
            }
          }
        ]
      }
    },
    {
      "daily_menu": {
        "daily_menu_id": "17178053",
        "start_date": "2020-07-14 00:00:00",
        "name": "Polévky",
        "dishes": [
          {
            "dish": {
              "dish_id": "634207002",
              "name": "Bramboračka s hříbky",
              "price": "45 Kč"
            }
          }
        ]
      }
    },
    {
      "daily_menu": {
        "daily_menu_id": "17178059",
        "start_date": "2020-07-14 00:00:00",
        "name": "Předkrmy / Jídla k pivu",
        "dishes": [
          {
            "dish": {
              "dish_id": "634206981",
              "name": "Kachní paštika s brusinkami, mandlemi a cibulovou marmeládou",
              "price": "89 Kč"
            }
          },
          {
            "dish": {
              "dish_id": "634206982",
              "name": "Studený roastbeef s hořčičnou omáčkou a okurkou",
              "price": "99 Kč"
            }
          },
          {
            "dish": {
              "dish_id": "634206983",
              "name": "Rillettes z vepřového masa s hořčičnou omáčkou",
              "price": "85 Kč"
            }
          },
          {
            "dish": {
              "dish_id": "634206984",
              "name": "Nakládaný hermelín",
              "price": "85 Kč"
            }
          },
          {
            "dish": {
              "dish_id": "634206985",
              "name": "Nakládané olomoucké tvarůžky  ",
              "price": "79 Kč"
            }
          },
          {
            "dish": {
              "dish_id": "634206986",
              "name": "Domácí škvarková pomazánka s cibulkou",
              "price": "65 Kč"
            }
          },
          {
            "dish": {
              "dish_id": "634206987",
              "name": "Tlačenka s cibulkou a octem",
              "price": "59 Kč"
            }
          },
          {
            "dish": {
              "dish_id": "634206988",
              "name": "Jehněčí klobásky s hořčičným dipem a malým zelným salátem",
              "price": "89 Kč"
            }
          },
          {
            "dish": {
              "dish_id": "634206989",
              "name": "Špekáčky na černém pivu",
              "price": "89 Kč"
            }
          },
          {
            "dish": {
              "dish_id": "634206990",
              "name": "Slané pražené mandle (80 g)",
              "price": "79 Kč"
            }
          }
        ]
      }
    },
    {
      "daily_menu": {
        "daily_menu_id": "17178061",
        "start_date": "2020-07-14 00:00:00",
        "name": "Hlavní chody",
        "dishes": [
          {
            "dish": {
              "dish_id": "634206991",
              "name": "Dančí svíčková s karlovarským knedlíkem a brusinkami",
              "price": "239 Kč"
            }
          },
          {
            "dish": {
              "dish_id": "634206992",
              "name": "Grilovaný flapsteak s gratinovanými bramborami a zelenými fazolkami, omáčka z pečeného česneku",
              "price": "249 Kč"
            }
          },
          {
            "dish": {
              "dish_id": "634206993",
              "name": "Marinovaná pečená vepřová žebra s česnekovou majonézou",
              "price": "196 Kč"
            }
          },
          {
            "dish": {
              "dish_id": "634206994",
              "name": "Medailonky z vepřové panenky s pečenou paprikou, brambory Grenaille a omáčka s rozmarýnem",
              "price": "229 Kč"
            }
          },
          {
            "dish": {
              "dish_id": "634206995",
              "name": "Rolované farmářské kuře marinované v brandy, smetanová br. kaše s list. špenátem",
              "price": "165 Kč"
            }
          },
          {
            "dish": {
              "dish_id": "634206996",
              "name": "Bůček na černém pivu s červeným zelím a bramborovými špalíky",
              "price": "149 Kč"
            }
          },
          {
            "dish": {
              "dish_id": "634206997",
              "name": "Smažený řízek z přeštického prasátka s lehkým bramborovým salátem",
              "price": "185 Kč"
            }
          },
          {
            "dish": {
              "dish_id": "634206998",
              "name": "Naše bramborové špalíky se smetanovým listovým špenátem",
              "price": "99 Kč"
            }
          }
        ]
      }
    },
    {
      "daily_menu": {
        "daily_menu_id": "17178064",
        "start_date": "2020-07-14 00:00:00",
        "name": "Saláty",
        "dishes": [
          {
            "dish": {
              "dish_id": "635121494",
              "name": "Salát se smaženými kuřecími proužky",
              "price": "129 Kč"
            }
          },
          {
            "dish": {
              "dish_id": "635121495",
              "name": "Salát s roastbeefem a pikantním česnekovým dresinkem",
              "price": "149 Kč"
            }
          },
          {
            "dish": {
              "dish_id": "635121496",
              "name": "Salát z mladého špenátu a hrášku s šalotkou a čerstvým kozím sýrem",
              "price": "129 Kč"
            }
          }
        ]
      }
    },
    {
      "daily_menu": {
        "daily_menu_id": "17191110",
        "start_date": "2020-07-14 00:00:00",
        "name": "Dezert",
        "dishes": [
          {
            "dish": {
              "dish_id": "631103520",
              "name": "Čokoládová pěna s višněmi marinovanými v griotce",
              "price": "55 Kč"
            }
          },
          {
            "dish": {
              "dish_id": "631103521",
              "name": "Šlehaná zakysaná smetana s medem a čerstvým ovocem, máta",
              "price": "55 Kč"
            }
          }
        ]
      }
    }
  ],
  "status": "success"
}]]>
    </line>
    <line>
      <![CDATA[
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=]]>
    </line>
    <line>
      <![CDATA[Response is showing correctly ]]>
    </line>
    <line>
      <![CDATA[=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
]]>
    </line>
    <line>
      <![CDATA[Response Body Json: 200]]>
    </line>
    <line>
      <![CDATA[
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=]]>
    </line>
    <line>
      <![CDATA[getting success response code]]>
    </line>
    <line>
      <![CDATA[=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
]]>
    </line>
    <line>
      <![CDATA[Response Body Json: {
  "code": 400,
  "status": "Bad Request",
  "message": "Invalid or missing parameter \"city_id\""
}]]>
    </line>
    <line>
      <![CDATA[
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=]]>
    </line>
    <line>
      <![CDATA[City-id is not correct]]>
    </line>
    <line>
      <![CDATA[=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
]]>
    </line>
    <line>
      <![CDATA[Response Body Json: 200]]>
    </line>
    <line>
      <![CDATA[
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=]]>
    </line>
    <line>
      <![CDATA[getting success response with valid latitude and longitude]]>
    </line>
    <line>
      <![CDATA[=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
]]>
    </line>
    <line>
      <![CDATA[Response Body Json: {
  "establishments": [
    {
      "establishment": {
        "id": 16,
        "name": "Casual Dining"
      }
    },
    {
      "establishment": {
        "id": 18,
        "name": "Fine Dining"
      }
    },
    {
      "establishment": {
        "id": 21,
        "name": "Quick Bites"
      }
    },
    {
      "establishment": {
        "id": 31,
        "name": "Bakery"
      }
    },
    {
      "establishment": {
        "id": 23,
        "name": "Dessert Parlour"
      }
    },
    {
      "establishment": {
        "id": 7,
        "name": "Bar"
      }
    },
    {
      "establishment": {
        "id": 5,
        "name": "Lounge"
      }
    },
    {
      "establishment": {
        "id": 1,
        "name": "Café"
      }
    },
    {
      "establishment": {
        "id": 4,
        "name": "Kiosk"
      }
    },
    {
      "establishment": {
        "id": 20,
        "name": "Food Court"
      }
    },
    {
      "establishment": {
        "id": 6,
        "name": "Pub"
      }
    },
    {
      "establishment": {
        "id": 8,
        "name": "Club"
      }
    },
    {
      "establishment": {
        "id": 291,
        "name": "Sweet Shop"
      }
    },
    {
      "establishment": {
        "id": 61,
        "name": "Dhaba"
      }
    },
    {
      "establishment": {
        "id": 161,
        "name": "Microbrewery"
      }
    },
    {
      "establishment": {
        "id": 304,
        "name": "Mess"
      }
    },
    {
      "establishment": {
        "id": 51,
        "name": "Butcher Shop"
      }
    },
    {
      "establishment": {
        "id": 41,
        "name": "Beverage Shop"
      }
    },
    {
      "establishment": {
        "id": 191,
        "name": "Confectionery"
      }
    },
    {
      "establishment": {
        "id": 81,
        "name": "Food Truck"
      }
    },
    {
      "establishment": {
        "id": 307,
        "name": "Bhojanalya"
      }
    },
    {
      "establishment": {
        "id": 308,
        "name": "Paan Shop"
      }
    },
    {
      "establishment": {
        "id": 131,
        "name": "Pop up"
      }
    },
    {
      "establishment": {
        "id": 311,
        "name": "General Store"
      }
    },
    {
      "establishment": {
        "id": 281,
        "name": "Fast Food"
      }
    },
    {
      "establishment": {
        "id": 261,
        "name": "Ice Cream Shop"
      }
    },
    {
      "establishment": {
        "id": 101,
        "name": "Diner"
      }
    },
    {
      "establishment": {
        "id": 284,
        "name": "Juice Bar"
      }
    },
    {
      "establishment": {
        "id": 271,
        "name": "Sandwich Shop"
      }
    },
    {
      "establishment": {
        "id": 91,
        "name": "Bistro"
      }
    },
    {
      "establishment": {
        "id": 211,
        "name": "Canteen"
      }
    },
    {
      "establishment": {
        "id": 121,
        "name": "Cakery"
      }
    },
    {
      "establishment": {
        "id": 285,
        "name": "Fast Casual"
      }
    }
  ]
}]]>
    </line>
    <line>
      <![CDATA[
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=]]>
    </line>
    <line>
      <![CDATA[getting success response body]]>
    </line>
    <line>
      <![CDATA[=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
]]>
    </line>
    <line>
      <![CDATA[Response Body Json: 200]]>
    </line>
    <line>
      <![CDATA[
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=]]>
    </line>
    <line>
      <![CDATA[getting success response code]]>
    </line>
    <line>
      <![CDATA[=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
]]>
    </line>
    <line>
      <![CDATA[Response Body Json: {
  "code": 403,
  "status": "Forbidden",
  "message": "Invalid location parameters"
}]]>
    </line>
    <line>
      <![CDATA[
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=]]>
    </line>
    <line>
      <![CDATA[getting failure response with invalid entity-id]]>
    </line>
    <line>
      <![CDATA[=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
]]>
    </line>
    <line>
      <![CDATA[Response Body Json: {
  "code": 403,
  "status": "Forbidden",
  "message": "Invalid location parameters"
}]]>
    </line>
    <line>
      <![CDATA[
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=]]>
    </line>
    <line>
      <![CDATA[getting failure response with invalid entity-type]]>
    </line>
    <line>
      <![CDATA[=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
]]>
    </line>
    <line>
      <![CDATA[Response Body Json: {
  "popularity": "4.81",
  "nightlife_index": "4.77",
  "nearby_res": [
    "17017688",
    "17011297",
    "17014029",
    "17011537",
    "17009051",
    "17010619",
    "17020821",
    "17021609",
    "17010970"
  ],
  "top_cuisines": [
    "American",
    "Sandwich",
    "Cafe",
    "Chinese",
    "Bar Food"
  ],
  "popularity_res": "100",
  "nightlife_res": "10",
  "subzone": "Logan Square",
  "subzone_id": 118207,
  "city": "Philadelphia",
  "location": {
    "entity_type": "group",
    "entity_id": 36989,
    "title": "Museum Towers, Philadelphia",
    "latitude": 39.9630305556,
    "longitude": -75.168175,
    "city_id": 287,
    "city_name": "Philadelphia",
    "country_id": 216,
    "country_name": "United States"
  },
  "num_restaurant": 3,
  "best_rated_restaurant": [
    {
      "restaurant": {
        "R": {
          "has_menu_status": {
            "delivery": -1,
            "takeaway": -1
          },
          "res_id": 17011924,
          "is_grocery_store": false
        },
        "apikey": "82cf521776cb3d225ae238f11b7d69b1",
        "id": "17011924",
        "name": "Golden Chopstick",
        "url": "https://www.zomato.com/philadelphia/golden-chopstick-logan-square?utm_source\u003dapi_basic_user\u0026utm_medium\u003dapi\u0026utm_campaign\u003dv2.1",
        "location": {
          "address": "Museum Towers, 1800 Spring Garden Street, Philadelphia 19130",
          "locality": "Museum Towers",
          "city": "Philadelphia",
          "city_id": 287,
          "latitude": "39.9630305556",
          "longitude": "-75.1681750000",
          "zipcode": "19130",
          "country_id": 216,
          "locality_verbose": "Museum Towers, Philadelphia"
        },
        "switch_to_order_menu": 0,
        "cuisines": "Chinese, Asian",
        "timings": "11 AM to 10:30 PM (Mon-Sat),12 Noon to 10:30 PM (Sun)",
        "average_cost_for_two": 25,
        "price_range": 1,
        "currency": "$",
        "highlights": [
          "Lunch",
          "Takeaway Available",
          "Dinner",
          "Indoor Seating",
          "Wifi",
          "ATM"
        ],
        "offers": [],
        "opentable_support": 0,
        "is_zomato_book_res": 0,
        "mezzo_provider": "OTHER",
        "is_book_form_web_view": 0,
        "book_form_web_view_url": "",
        "book_again_url": "",
        "thumb": "https://b.zmtcdn.com/data/res_imagery/17011924_RESTAURANT_51c1e0c30f8504253198995eb4cc5359_c.jpg?fit\u003daround%7C200%3A200\u0026crop\u003d200%3A200%3B%2A%2C%2A",
        "user_rating": {
          "aggregate_rating": "3.4",
          "rating_text": "Average",
          "rating_color": "CDD614",
          "rating_obj": {
            "title": {
              "text": "3.4"
            },
            "bg_color": {
              "type": "lime",
              "tint": "500"
            }
          },
          "votes": 16
        },
        "all_reviews_count": 3,
        "photos_url": "https://www.zomato.com/philadelphia/golden-chopstick-logan-square/photos?utm_source\u003dapi_basic_user\u0026utm_medium\u003dapi\u0026utm_campaign\u003dv2.1#tabtop",
        "photo_count": 13,
        "menu_url": "https://www.zomato.com/philadelphia/golden-chopstick-logan-square/menu?utm_source\u003dapi_basic_user\u0026utm_medium\u003dapi\u0026utm_campaign\u003dv2.1\u0026openSwipeBox\u003dmenu\u0026showMinimal\u003d1#tabtop",
        "featured_image": "https://b.zmtcdn.com/data/res_imagery/17011924_RESTAURANT_51c1e0c30f8504253198995eb4cc5359_c.jpg",
        "has_online_delivery": 0,
        "is_delivering_now": 0,
        "store_type": "",
        "include_bogo_offers": true,
        "deeplink": "zomato://restaurant/17011924",
        "is_table_reservation_supported": 0,
        "has_table_booking": 0,
        "events_url": "https://www.zomato.com/philadelphia/golden-chopstick-logan-square/events#tabtop?utm_source\u003dapi_basic_user\u0026utm_medium\u003dapi\u0026utm_campaign\u003dv2.1",
        "phone_numbers": "(215) 496-9190",
        "all_reviews": {
          "reviews": [
            {
              "review": []
            },
            {
              "review": []
            },
            {
              "review": []
            }
          ]
        },
        "establishment": [
          "Casual Dining"
        ]
      }
    },
    {
      "restaurant": {
        "R": {
          "has_menu_status": {
            "delivery": -1,
            "takeaway": -1
          },
          "res_id": 18026968,
          "is_grocery_store": false
        },
        "apikey": "82cf521776cb3d225ae238f11b7d69b1",
        "id": "18026968",
        "name": "Museum Market",
        "url": "https://www.zomato.com/philadelphia/museum-market-logan-square?utm_source\u003dapi_basic_user\u0026utm_medium\u003dapi\u0026utm_campaign\u003dv2.1",
        "location": {
          "address": "Museum Towers, 1800 Spring Garden, Philadelphia 19130",
          "locality": "Museum Towers",
          "city": "Philadelphia",
          "city_id": 287,
          "latitude": "39.9632111111",
          "longitude": "-75.1687694444",
          "zipcode": "19130",
          "country_id": 216,
          "locality_verbose": "Museum Towers, Philadelphia"
        },
        "switch_to_order_menu": 0,
        "cuisines": "Deli",
        "timings": "7 AM to 9 PM (Mon-Fri),8 AM to 8 PM (Sat-Sun)",
        "average_cost_for_two": 15,
        "price_range": 1,
        "currency": "$",
        "highlights": [
          "Credit Card",
          "Breakfast",
          "Takeaway Available",
          "Lunch"
        ],
        "offers": [],
        "opentable_support": 0,
        "is_zomato_book_res": 0,
        "mezzo_provider": "OTHER",
        "is_book_form_web_view": 0,
        "book_form_web_view_url": "",
        "book_again_url": "",
        "thumb": "",
        "user_rating": {
          "aggregate_rating": 0,
          "rating_text": "Not rated",
          "rating_color": "CBCBCB",
          "rating_obj": {
            "title": {
              "text": "-"
            },
            "bg_color": {
              "type": "grey",
              "tint": "400"
            }
          },
          "votes": 0
        },
        "all_reviews_count": 0,
        "photos_url": "https://www.zomato.com/philadelphia/museum-market-logan-square/photos?utm_source\u003dapi_basic_user\u0026utm_medium\u003dapi\u0026utm_campaign\u003dv2.1#tabtop",
        "photo_count": 2,
        "menu_url": "https://www.zomato.com/philadelphia/museum-market-logan-square/menu?utm_source\u003dapi_basic_user\u0026utm_medium\u003dapi\u0026utm_campaign\u003dv2.1\u0026openSwipeBox\u003dmenu\u0026showMinimal\u003d1#tabtop",
        "featured_image": "",
        "has_online_delivery": 0,
        "is_delivering_now": 0,
        "store_type": "",
        "include_bogo_offers": true,
        "deeplink": "zomato://restaurant/18026968",
        "is_table_reservation_supported": 0,
        "has_table_booking": 0,
        "events_url": "https://www.zomato.com/philadelphia/museum-market-logan-square/events#tabtop?utm_source\u003dapi_basic_user\u0026utm_medium\u003dapi\u0026utm_campaign\u003dv2.1",
        "phone_numbers": "Not available for this place",
        "all_reviews": {
          "reviews": []
        },
        "establishment": [
          "Deli"
        ]
      }
    },
    {
      "restaurant": {
        "R": {
          "has_menu_status": {
            "delivery": -1,
            "takeaway": -1
          },
          "res_id": 17022905,
          "is_grocery_store": false
        },
        "apikey": "82cf521776cb3d225ae238f11b7d69b1",
        "id": "17022905",
        "name": "Subway",
        "url": "https://www.zomato.com/philadelphia/subway-logan-square?utm_source\u003dapi_basic_user\u0026utm_medium\u003dapi\u0026utm_campaign\u003dv2.1",
        "location": {
          "address": "Museum Towers, 1800 Spring Garden Street, Philadelphia 19130",
          "locality": "Museum Towers",
          "city": "Philadelphia",
          "city_id": 287,
          "latitude": "39.9631055556",
          "longitude": "-75.1683972222",
          "zipcode": "19130",
          "country_id": 216,
          "locality_verbose": "Museum Towers, Philadelphia"
        },
        "switch_to_order_menu": 0,
        "cuisines": "Sandwich",
        "timings": "7 AM to 11 PM (Mon-Fri),11 AM to 9 PM (Sat-Sun)",
        "average_cost_for_two": 15,
        "price_range": 1,
        "currency": "$",
        "highlights": [
          "Credit Card",
          "Takeaway Available",
          "Breakfast",
          "Lunch",
          "Indoor Seating",
          "Vegetarian Friendly"
        ],
        "offers": [],
        "opentable_support": 0,
        "is_zomato_book_res": 0,
        "mezzo_provider": "OTHER",
        "is_book_form_web_view": 0,
        "book_form_web_view_url": "",
        "book_again_url": "",
        "thumb": "https://b.zmtcdn.com/data/res_imagery/17016448_CHAIN_21ae20ff55aa7f710865b8455e950830.jpg?fit\u003daround%7C200%3A200\u0026crop\u003d200%3A200%3B%2A%2C%2A",
        "user_rating": {
          "aggregate_rating": 0,
          "rating_text": "Not rated",
          "rating_color": "CBCBCB",
          "rating_obj": {
            "title": {
              "text": "-"
            },
            "bg_color": {
              "type": "grey",
              "tint": "400"
            }
          },
          "votes": 1
        },
        "all_reviews_count": 0,
        "photos_url": "https://www.zomato.com/philadelphia/subway-logan-square/photos?utm_source\u003dapi_basic_user\u0026utm_medium\u003dapi\u0026utm_campaign\u003dv2.1#tabtop",
        "photo_count": 2,
        "menu_url": "https://www.zomato.com/philadelphia/subway-logan-square/menu?utm_source\u003dapi_basic_user\u0026utm_medium\u003dapi\u0026utm_campaign\u003dv2.1\u0026openSwipeBox\u003dmenu\u0026showMinimal\u003d1#tabtop",
        "featured_image": "https://b.zmtcdn.com/data/res_imagery/17016448_CHAIN_21ae20ff55aa7f710865b8455e950830.jpg",
        "has_online_delivery": 0,
        "is_delivering_now": 0,
        "store_type": "",
        "include_bogo_offers": true,
        "deeplink": "zomato://restaurant/17022905",
        "is_table_reservation_supported": 0,
        "has_table_booking": 0,
        "events_url": "https://www.zomato.com/philadelphia/subway-logan-square/events#tabtop?utm_source\u003dapi_basic_user\u0026utm_medium\u003dapi\u0026utm_campaign\u003dv2.1",
        "phone_numbers": "(267) 639-2764",
        "all_reviews": {
          "reviews": []
        },
        "establishment": [
          "Sandwich Shop"
        ]
      }
    }
  ]
}]]>
    </line>
    <line>
      <![CDATA[
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=]]>
    </line>
    <line>
      <![CDATA[getting valid response body]]>
    </line>
  </reporter-output>
  <suite name="Suite" duration-ms="19702" started-at="2020-07-14T15:16:17Z" finished-at="2020-07-14T15:16:37Z">
    <groups>
    </groups>
    <test name="city" duration-ms="2376" started-at="2020-07-14T15:16:17Z" finished-at="2020-07-14T15:16:20Z">
      <class name="com.qa.TestCase.City">
        <test-method status="PASS" signature="checksuccessresponsecode()[pri:1, instance:com.qa.TestCase.City@fa4c865]" name="checksuccessresponsecode" duration-ms="986" started-at="2020-07-14T15:16:18Z" finished-at="2020-07-14T15:16:18Z">
          <reporter-output>
            <line>
              <![CDATA[=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
]]>
            </line>
            <line>
              <![CDATA[Response Body Json: 200]]>
            </line>
            <line>
              <![CDATA[
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=]]>
            </line>
            <line>
              <![CDATA[Response is correct with userkey and city name]]>
            </line>
            <line>
              <![CDATA[=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
]]>
            </line>
            <line>
              <![CDATA[Response Body Json: 200]]>
            </line>
            <line>
              <![CDATA[
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=]]>
            </line>
            <line>
              <![CDATA[Response is correct with user key,latitude and longitude]]>
            </line>
            <line>
              <![CDATA[=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
]]>
            </line>
            <line>
              <![CDATA[Response Body Json: 200]]>
            </line>
            <line>
              <![CDATA[
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=]]>
            </line>
            <line>
              <![CDATA[Response is correct with user keyand cityid]]>
            </line>
          </reporter-output>
        </test-method> <!-- checksuccessresponsecode -->
        <test-method status="PASS" signature="checkcountresponse()[pri:2, instance:com.qa.TestCase.City@fa4c865]" name="checkcountresponse" duration-ms="198" started-at="2020-07-14T15:16:18Z" finished-at="2020-07-14T15:16:19Z">
          <reporter-output>
            <line>
              <![CDATA[=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
]]>
            </line>
            <line>
              <![CDATA[Response Body Json: {
  "location_suggestions": [
    {
      "id": 4,
      "name": "Bengaluru",
      "country_id": 1,
      "country_name": "India",
      "country_flag_url": "https://b.zmtcdn.com/images/countries/flags/country_1.png",
      "should_experiment_with": 0,
      "has_go_out_tab": 0,
      "discovery_enabled": 0,
      "has_new_ad_format": 1,
      "is_state": 0,
      "state_id": 0,
      "state_name": "",
      "state_code": ""
    },
    {
      "id": 5,
      "name": "Pune",
      "country_id": 1,
      "country_name": "India",
      "country_flag_url": "https://b.zmtcdn.com/images/countries/flags/country_1.png",
      "should_experiment_with": 0,
      "has_go_out_tab": 0,
      "discovery_enabled": 0,
      "has_new_ad_format": 1,
      "is_state": 0,
      "state_id": 0,
      "state_name": "",
      "state_code": ""
    },
    {
      "id": 7,
      "name": "Chennai",
      "country_id": 1,
      "country_name": "India",
      "country_flag_url": "https://b.zmtcdn.com/images/countries/flags/country_1.png",
      "should_experiment_with": 0,
      "has_go_out_tab": 0,
      "discovery_enabled": 0,
      "has_new_ad_format": 1,
      "is_state": 0,
      "state_id": 0,
      "state_name": "",
      "state_code": ""
    }
  ],
  "status": "success",
  "has_more": 0,
  "has_total": 0,
  "user_has_addresses": true
}]]>
            </line>
            <line>
              <![CDATA[
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkcountresponse -->
        <test-method status="PASS" signature="check1()[pri:3, instance:com.qa.TestCase.City@fa4c865]" name="check1" duration-ms="990" started-at="2020-07-14T15:16:19Z" finished-at="2020-07-14T15:16:20Z">
          <reporter-output>
            <line>
              <![CDATA[=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
]]>
            </line>
            <line>
              <![CDATA[Response Body Json: {
  "code": 403,
  "status": "Forbidden",
  "message": "Invalid API Key"
}]]>
            </line>
            <line>
              <![CDATA[
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=]]>
            </line>
            <line>
              <![CDATA[Invalid api key]]>
            </line>
          </reporter-output>
        </test-method> <!-- check1 -->
        <test-method status="PASS" signature="checkcityid()[pri:4, instance:com.qa.TestCase.City@fa4c865]" name="checkcityid" duration-ms="132" started-at="2020-07-14T15:16:20Z" finished-at="2020-07-14T15:16:20Z">
          <reporter-output>
            <line>
              <![CDATA[=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
]]>
            </line>
            <line>
              <![CDATA[Response Body Json: 200]]>
            </line>
            <line>
              <![CDATA[
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkcityid -->
      </class> <!-- com.qa.TestCase.City -->
    </test> <!-- city -->
    <test name="Dailymenu" duration-ms="632" started-at="2020-07-14T15:16:25Z" finished-at="2020-07-14T15:16:25Z">
      <class name="com.qa.TestCase.Dailymenu">
        <test-method status="PASS" signature="checksuccessresponsecode()[pri:5, instance:com.qa.TestCase.Dailymenu@158a8276]" name="checksuccessresponsecode" duration-ms="193" started-at="2020-07-14T15:16:25Z" finished-at="2020-07-14T15:16:25Z">
          <reporter-output>
            <line>
              <![CDATA[=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
]]>
            </line>
            <line>
              <![CDATA[Response Body Json: 200]]>
            </line>
            <line>
              <![CDATA[
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=]]>
            </line>
            <line>
              <![CDATA[getting success response]]>
            </line>
          </reporter-output>
        </test-method> <!-- checksuccessresponsecode -->
        <test-method status="PASS" signature="checkrestid()[pri:6, instance:com.qa.TestCase.Dailymenu@158a8276]" name="checkrestid" duration-ms="256" started-at="2020-07-14T15:16:25Z" finished-at="2020-07-14T15:16:25Z">
          <reporter-output>
            <line>
              <![CDATA[=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
]]>
            </line>
            <line>
              <![CDATA[Response Body Json: {
  "code": 400,
  "status": "Bad Request",
  "message": "No Daily Menu Available"
}]]>
            </line>
            <line>
              <![CDATA[
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=]]>
            </line>
            <line>
              <![CDATA[No daily menu available with invalid entity-id]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkrestid -->
        <test-method status="PASS" signature="validatedailymenu()[pri:7, instance:com.qa.TestCase.Dailymenu@158a8276]" name="validatedailymenu" duration-ms="178" started-at="2020-07-14T15:16:25Z" finished-at="2020-07-14T15:16:25Z">
          <reporter-output>
            <line>
              <![CDATA[=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
]]>
            </line>
            <line>
              <![CDATA[Response Body Json: {
  "daily_menus": [
    {
      "daily_menu": {
        "daily_menu_id": "20951458",
        "start_date": "2020-07-14 00:00:00",
        "end_date": "2020-07-14 23:59:59",
        "name": "",
        "dishes": [
          {
            "dish": {
              "dish_id": "705488337",
              "name": "Čočková polévka s uzeninou",
              "price": "45 Kč"
            }
          },
          {
            "dish": {
              "dish_id": "705488338",
              "name": "Lentil soup with sausage",
              "price": "45 Kč"
            }
          },
          {
            "dish": {
              "dish_id": "705488339",
              "name": "Deep fried pork meatball with cheese, mashed potatoes and pickles",
              "price": "135 Kč"
            }
          },
          {
            "dish": {
              "dish_id": "705488340",
              "name": "Hovězí maso stroganoff, rýže basmati",
              "price": "149 Kč"
            }
          },
          {
            "dish": {
              "dish_id": "705488341",
              "name": "Beef stroganoff with basmati rice",
              "price": "149 Kč"
            }
          },
          {
            "dish": {
              "dish_id": "705488342",
              "name": "Bryndzové halušky s osmaženou cibulkou, se slaninou nebo bez",
              "price": "129 Kč"
            }
          },
          {
            "dish": {
              "dish_id": "705488343",
              "name": "Slovak style gnocchi with sheep cheese and fried onions, with or without bacon",
              "price": "129 Kč"
            }
          },
          {
            "dish": {
              "dish_id": "705488344",
              "name": "Smažený vepřový karbanátek se sýrem, bramborová kaše, kyselá okurka",
              "price": "135 Kč"
            }
          }
        ]
      }
    },
    {
      "daily_menu": {
        "daily_menu_id": "17178053",
        "start_date": "2020-07-14 00:00:00",
        "name": "Polévky",
        "dishes": [
          {
            "dish": {
              "dish_id": "634207002",
              "name": "Bramboračka s hříbky",
              "price": "45 Kč"
            }
          }
        ]
      }
    },
    {
      "daily_menu": {
        "daily_menu_id": "17178059",
        "start_date": "2020-07-14 00:00:00",
        "name": "Předkrmy / Jídla k pivu",
        "dishes": [
          {
            "dish": {
              "dish_id": "634206981",
              "name": "Kachní paštika s brusinkami, mandlemi a cibulovou marmeládou",
              "price": "89 Kč"
            }
          },
          {
            "dish": {
              "dish_id": "634206982",
              "name": "Studený roastbeef s hořčičnou omáčkou a okurkou",
              "price": "99 Kč"
            }
          },
          {
            "dish": {
              "dish_id": "634206983",
              "name": "Rillettes z vepřového masa s hořčičnou omáčkou",
              "price": "85 Kč"
            }
          },
          {
            "dish": {
              "dish_id": "634206984",
              "name": "Nakládaný hermelín",
              "price": "85 Kč"
            }
          },
          {
            "dish": {
              "dish_id": "634206985",
              "name": "Nakládané olomoucké tvarůžky  ",
              "price": "79 Kč"
            }
          },
          {
            "dish": {
              "dish_id": "634206986",
              "name": "Domácí škvarková pomazánka s cibulkou",
              "price": "65 Kč"
            }
          },
          {
            "dish": {
              "dish_id": "634206987",
              "name": "Tlačenka s cibulkou a octem",
              "price": "59 Kč"
            }
          },
          {
            "dish": {
              "dish_id": "634206988",
              "name": "Jehněčí klobásky s hořčičným dipem a malým zelným salátem",
              "price": "89 Kč"
            }
          },
          {
            "dish": {
              "dish_id": "634206989",
              "name": "Špekáčky na černém pivu",
              "price": "89 Kč"
            }
          },
          {
            "dish": {
              "dish_id": "634206990",
              "name": "Slané pražené mandle (80 g)",
              "price": "79 Kč"
            }
          }
        ]
      }
    },
    {
      "daily_menu": {
        "daily_menu_id": "17178061",
        "start_date": "2020-07-14 00:00:00",
        "name": "Hlavní chody",
        "dishes": [
          {
            "dish": {
              "dish_id": "634206991",
              "name": "Dančí svíčková s karlovarským knedlíkem a brusinkami",
              "price": "239 Kč"
            }
          },
          {
            "dish": {
              "dish_id": "634206992",
              "name": "Grilovaný flapsteak s gratinovanými bramborami a zelenými fazolkami, omáčka z pečeného česneku",
              "price": "249 Kč"
            }
          },
          {
            "dish": {
              "dish_id": "634206993",
              "name": "Marinovaná pečená vepřová žebra s česnekovou majonézou",
              "price": "196 Kč"
            }
          },
          {
            "dish": {
              "dish_id": "634206994",
              "name": "Medailonky z vepřové panenky s pečenou paprikou, brambory Grenaille a omáčka s rozmarýnem",
              "price": "229 Kč"
            }
          },
          {
            "dish": {
              "dish_id": "634206995",
              "name": "Rolované farmářské kuře marinované v brandy, smetanová br. kaše s list. špenátem",
              "price": "165 Kč"
            }
          },
          {
            "dish": {
              "dish_id": "634206996",
              "name": "Bůček na černém pivu s červeným zelím a bramborovými špalíky",
              "price": "149 Kč"
            }
          },
          {
            "dish": {
              "dish_id": "634206997",
              "name": "Smažený řízek z přeštického prasátka s lehkým bramborovým salátem",
              "price": "185 Kč"
            }
          },
          {
            "dish": {
              "dish_id": "634206998",
              "name": "Naše bramborové špalíky se smetanovým listovým špenátem",
              "price": "99 Kč"
            }
          }
        ]
      }
    },
    {
      "daily_menu": {
        "daily_menu_id": "17178064",
        "start_date": "2020-07-14 00:00:00",
        "name": "Saláty",
        "dishes": [
          {
            "dish": {
              "dish_id": "635121494",
              "name": "Salát se smaženými kuřecími proužky",
              "price": "129 Kč"
            }
          },
          {
            "dish": {
              "dish_id": "635121495",
              "name": "Salát s roastbeefem a pikantním česnekovým dresinkem",
              "price": "149 Kč"
            }
          },
          {
            "dish": {
              "dish_id": "635121496",
              "name": "Salát z mladého špenátu a hrášku s šalotkou a čerstvým kozím sýrem",
              "price": "129 Kč"
            }
          }
        ]
      }
    },
    {
      "daily_menu": {
        "daily_menu_id": "17191110",
        "start_date": "2020-07-14 00:00:00",
        "name": "Dezert",
        "dishes": [
          {
            "dish": {
              "dish_id": "631103520",
              "name": "Čokoládová pěna s višněmi marinovanými v griotce",
              "price": "55 Kč"
            }
          },
          {
            "dish": {
              "dish_id": "631103521",
              "name": "Šlehaná zakysaná smetana s medem a čerstvým ovocem, máta",
              "price": "55 Kč"
            }
          }
        ]
      }
    }
  ],
  "status": "success"
}]]>
            </line>
            <line>
              <![CDATA[
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=]]>
            </line>
            <line>
              <![CDATA[Response is showing correctly ]]>
            </line>
          </reporter-output>
        </test-method> <!-- validatedailymenu -->
      </class> <!-- com.qa.TestCase.Dailymenu -->
    </test> <!-- Dailymenu -->
    <test name="Establishments" duration-ms="752" started-at="2020-07-14T15:16:31Z" finished-at="2020-07-14T15:16:31Z">
      <class name="com.qa.TestCase.Establishments">
        <test-method status="PASS" signature="checksuccessresponsecode()[pri:1, instance:com.qa.TestCase.Establishments@394df057]" name="checksuccessresponsecode" duration-ms="130" started-at="2020-07-14T15:16:31Z" finished-at="2020-07-14T15:16:31Z">
          <reporter-output>
            <line>
              <![CDATA[=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
]]>
            </line>
            <line>
              <![CDATA[Response Body Json: 200]]>
            </line>
            <line>
              <![CDATA[
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=]]>
            </line>
            <line>
              <![CDATA[getting success response code]]>
            </line>
          </reporter-output>
        </test-method> <!-- checksuccessresponsecode -->
        <test-method status="PASS" signature="checkrestid()[pri:2, instance:com.qa.TestCase.Establishments@394df057]" name="checkrestid" duration-ms="266" started-at="2020-07-14T15:16:31Z" finished-at="2020-07-14T15:16:31Z">
          <reporter-output>
            <line>
              <![CDATA[=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
]]>
            </line>
            <line>
              <![CDATA[Response Body Json: {
  "code": 400,
  "status": "Bad Request",
  "message": "Invalid or missing parameter \"city_id\""
}]]>
            </line>
            <line>
              <![CDATA[
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=]]>
            </line>
            <line>
              <![CDATA[City-id is not correct]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkrestid -->
        <test-method status="PASS" signature="checksuccessresponsecodewithlatitudelongitude()[pri:3, instance:com.qa.TestCase.Establishments@394df057]" name="checksuccessresponsecodewithlatitudelongitude" duration-ms="132" started-at="2020-07-14T15:16:31Z" finished-at="2020-07-14T15:16:31Z">
          <reporter-output>
            <line>
              <![CDATA[=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
]]>
            </line>
            <line>
              <![CDATA[Response Body Json: 200]]>
            </line>
            <line>
              <![CDATA[
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=]]>
            </line>
            <line>
              <![CDATA[getting success response with valid latitude and longitude]]>
            </line>
          </reporter-output>
        </test-method> <!-- checksuccessresponsecodewithlatitudelongitude -->
        <test-method status="PASS" signature="checkestablishmentidresponse()[pri:4, instance:com.qa.TestCase.Establishments@394df057]" name="checkestablishmentidresponse" duration-ms="219" started-at="2020-07-14T15:16:31Z" finished-at="2020-07-14T15:16:31Z">
          <reporter-output>
            <line>
              <![CDATA[=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
]]>
            </line>
            <line>
              <![CDATA[Response Body Json: {
  "establishments": [
    {
      "establishment": {
        "id": 16,
        "name": "Casual Dining"
      }
    },
    {
      "establishment": {
        "id": 18,
        "name": "Fine Dining"
      }
    },
    {
      "establishment": {
        "id": 21,
        "name": "Quick Bites"
      }
    },
    {
      "establishment": {
        "id": 31,
        "name": "Bakery"
      }
    },
    {
      "establishment": {
        "id": 23,
        "name": "Dessert Parlour"
      }
    },
    {
      "establishment": {
        "id": 7,
        "name": "Bar"
      }
    },
    {
      "establishment": {
        "id": 5,
        "name": "Lounge"
      }
    },
    {
      "establishment": {
        "id": 1,
        "name": "Café"
      }
    },
    {
      "establishment": {
        "id": 4,
        "name": "Kiosk"
      }
    },
    {
      "establishment": {
        "id": 20,
        "name": "Food Court"
      }
    },
    {
      "establishment": {
        "id": 6,
        "name": "Pub"
      }
    },
    {
      "establishment": {
        "id": 8,
        "name": "Club"
      }
    },
    {
      "establishment": {
        "id": 291,
        "name": "Sweet Shop"
      }
    },
    {
      "establishment": {
        "id": 61,
        "name": "Dhaba"
      }
    },
    {
      "establishment": {
        "id": 161,
        "name": "Microbrewery"
      }
    },
    {
      "establishment": {
        "id": 304,
        "name": "Mess"
      }
    },
    {
      "establishment": {
        "id": 51,
        "name": "Butcher Shop"
      }
    },
    {
      "establishment": {
        "id": 41,
        "name": "Beverage Shop"
      }
    },
    {
      "establishment": {
        "id": 191,
        "name": "Confectionery"
      }
    },
    {
      "establishment": {
        "id": 81,
        "name": "Food Truck"
      }
    },
    {
      "establishment": {
        "id": 307,
        "name": "Bhojanalya"
      }
    },
    {
      "establishment": {
        "id": 308,
        "name": "Paan Shop"
      }
    },
    {
      "establishment": {
        "id": 131,
        "name": "Pop up"
      }
    },
    {
      "establishment": {
        "id": 311,
        "name": "General Store"
      }
    },
    {
      "establishment": {
        "id": 281,
        "name": "Fast Food"
      }
    },
    {
      "establishment": {
        "id": 261,
        "name": "Ice Cream Shop"
      }
    },
    {
      "establishment": {
        "id": 101,
        "name": "Diner"
      }
    },
    {
      "establishment": {
        "id": 284,
        "name": "Juice Bar"
      }
    },
    {
      "establishment": {
        "id": 271,
        "name": "Sandwich Shop"
      }
    },
    {
      "establishment": {
        "id": 91,
        "name": "Bistro"
      }
    },
    {
      "establishment": {
        "id": 211,
        "name": "Canteen"
      }
    },
    {
      "establishment": {
        "id": 121,
        "name": "Cakery"
      }
    },
    {
      "establishment": {
        "id": 285,
        "name": "Fast Casual"
      }
    }
  ]
}]]>
            </line>
            <line>
              <![CDATA[
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=]]>
            </line>
            <line>
              <![CDATA[getting success response body]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkestablishmentidresponse -->
      </class> <!-- com.qa.TestCase.Establishments -->
    </test> <!-- Establishments -->
    <test name="Location" duration-ms="899" started-at="2020-07-14T15:16:36Z" finished-at="2020-07-14T15:16:37Z">
      <class name="com.qa.TestCase.Location">
        <test-method status="PASS" signature="checksuccessresponsecode()[pri:1, instance:com.qa.TestCase.Location@6a2f6f80]" name="checksuccessresponsecode" duration-ms="269" started-at="2020-07-14T15:16:36Z" finished-at="2020-07-14T15:16:37Z">
          <reporter-output>
            <line>
              <![CDATA[=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
]]>
            </line>
            <line>
              <![CDATA[Response Body Json: 200]]>
            </line>
            <line>
              <![CDATA[
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=]]>
            </line>
            <line>
              <![CDATA[getting success response code]]>
            </line>
          </reporter-output>
        </test-method> <!-- checksuccessresponsecode -->
        <test-method status="PASS" signature="checkentityid()[pri:2, instance:com.qa.TestCase.Location@6a2f6f80]" name="checkentityid" duration-ms="236" started-at="2020-07-14T15:16:37Z" finished-at="2020-07-14T15:16:37Z">
          <reporter-output>
            <line>
              <![CDATA[=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
]]>
            </line>
            <line>
              <![CDATA[Response Body Json: {
  "code": 403,
  "status": "Forbidden",
  "message": "Invalid location parameters"
}]]>
            </line>
            <line>
              <![CDATA[
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=]]>
            </line>
            <line>
              <![CDATA[getting failure response with invalid entity-id]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkentityid -->
        <test-method status="PASS" signature="checkentitytype()[pri:3, instance:com.qa.TestCase.Location@6a2f6f80]" name="checkentitytype" duration-ms="179" started-at="2020-07-14T15:16:37Z" finished-at="2020-07-14T15:16:37Z">
          <reporter-output>
            <line>
              <![CDATA[=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
]]>
            </line>
            <line>
              <![CDATA[Response Body Json: {
  "code": 403,
  "status": "Forbidden",
  "message": "Invalid location parameters"
}]]>
            </line>
            <line>
              <![CDATA[
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=]]>
            </line>
            <line>
              <![CDATA[getting failure response with invalid entity-type]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkentitytype -->
        <test-method status="PASS" signature="validateentityidandtype()[pri:4, instance:com.qa.TestCase.Location@6a2f6f80]" name="validateentityidandtype" duration-ms="210" started-at="2020-07-14T15:16:37Z" finished-at="2020-07-14T15:16:37Z">
          <reporter-output>
            <line>
              <![CDATA[=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
]]>
            </line>
            <line>
              <![CDATA[Response Body Json: {
  "popularity": "4.81",
  "nightlife_index": "4.77",
  "nearby_res": [
    "17017688",
    "17011297",
    "17014029",
    "17011537",
    "17009051",
    "17010619",
    "17020821",
    "17021609",
    "17010970"
  ],
  "top_cuisines": [
    "American",
    "Sandwich",
    "Cafe",
    "Chinese",
    "Bar Food"
  ],
  "popularity_res": "100",
  "nightlife_res": "10",
  "subzone": "Logan Square",
  "subzone_id": 118207,
  "city": "Philadelphia",
  "location": {
    "entity_type": "group",
    "entity_id": 36989,
    "title": "Museum Towers, Philadelphia",
    "latitude": 39.9630305556,
    "longitude": -75.168175,
    "city_id": 287,
    "city_name": "Philadelphia",
    "country_id": 216,
    "country_name": "United States"
  },
  "num_restaurant": 3,
  "best_rated_restaurant": [
    {
      "restaurant": {
        "R": {
          "has_menu_status": {
            "delivery": -1,
            "takeaway": -1
          },
          "res_id": 17011924,
          "is_grocery_store": false
        },
        "apikey": "82cf521776cb3d225ae238f11b7d69b1",
        "id": "17011924",
        "name": "Golden Chopstick",
        "url": "https://www.zomato.com/philadelphia/golden-chopstick-logan-square?utm_source\u003dapi_basic_user\u0026utm_medium\u003dapi\u0026utm_campaign\u003dv2.1",
        "location": {
          "address": "Museum Towers, 1800 Spring Garden Street, Philadelphia 19130",
          "locality": "Museum Towers",
          "city": "Philadelphia",
          "city_id": 287,
          "latitude": "39.9630305556",
          "longitude": "-75.1681750000",
          "zipcode": "19130",
          "country_id": 216,
          "locality_verbose": "Museum Towers, Philadelphia"
        },
        "switch_to_order_menu": 0,
        "cuisines": "Chinese, Asian",
        "timings": "11 AM to 10:30 PM (Mon-Sat),12 Noon to 10:30 PM (Sun)",
        "average_cost_for_two": 25,
        "price_range": 1,
        "currency": "$",
        "highlights": [
          "Lunch",
          "Takeaway Available",
          "Dinner",
          "Indoor Seating",
          "Wifi",
          "ATM"
        ],
        "offers": [],
        "opentable_support": 0,
        "is_zomato_book_res": 0,
        "mezzo_provider": "OTHER",
        "is_book_form_web_view": 0,
        "book_form_web_view_url": "",
        "book_again_url": "",
        "thumb": "https://b.zmtcdn.com/data/res_imagery/17011924_RESTAURANT_51c1e0c30f8504253198995eb4cc5359_c.jpg?fit\u003daround%7C200%3A200\u0026crop\u003d200%3A200%3B%2A%2C%2A",
        "user_rating": {
          "aggregate_rating": "3.4",
          "rating_text": "Average",
          "rating_color": "CDD614",
          "rating_obj": {
            "title": {
              "text": "3.4"
            },
            "bg_color": {
              "type": "lime",
              "tint": "500"
            }
          },
          "votes": 16
        },
        "all_reviews_count": 3,
        "photos_url": "https://www.zomato.com/philadelphia/golden-chopstick-logan-square/photos?utm_source\u003dapi_basic_user\u0026utm_medium\u003dapi\u0026utm_campaign\u003dv2.1#tabtop",
        "photo_count": 13,
        "menu_url": "https://www.zomato.com/philadelphia/golden-chopstick-logan-square/menu?utm_source\u003dapi_basic_user\u0026utm_medium\u003dapi\u0026utm_campaign\u003dv2.1\u0026openSwipeBox\u003dmenu\u0026showMinimal\u003d1#tabtop",
        "featured_image": "https://b.zmtcdn.com/data/res_imagery/17011924_RESTAURANT_51c1e0c30f8504253198995eb4cc5359_c.jpg",
        "has_online_delivery": 0,
        "is_delivering_now": 0,
        "store_type": "",
        "include_bogo_offers": true,
        "deeplink": "zomato://restaurant/17011924",
        "is_table_reservation_supported": 0,
        "has_table_booking": 0,
        "events_url": "https://www.zomato.com/philadelphia/golden-chopstick-logan-square/events#tabtop?utm_source\u003dapi_basic_user\u0026utm_medium\u003dapi\u0026utm_campaign\u003dv2.1",
        "phone_numbers": "(215) 496-9190",
        "all_reviews": {
          "reviews": [
            {
              "review": []
            },
            {
              "review": []
            },
            {
              "review": []
            }
          ]
        },
        "establishment": [
          "Casual Dining"
        ]
      }
    },
    {
      "restaurant": {
        "R": {
          "has_menu_status": {
            "delivery": -1,
            "takeaway": -1
          },
          "res_id": 18026968,
          "is_grocery_store": false
        },
        "apikey": "82cf521776cb3d225ae238f11b7d69b1",
        "id": "18026968",
        "name": "Museum Market",
        "url": "https://www.zomato.com/philadelphia/museum-market-logan-square?utm_source\u003dapi_basic_user\u0026utm_medium\u003dapi\u0026utm_campaign\u003dv2.1",
        "location": {
          "address": "Museum Towers, 1800 Spring Garden, Philadelphia 19130",
          "locality": "Museum Towers",
          "city": "Philadelphia",
          "city_id": 287,
          "latitude": "39.9632111111",
          "longitude": "-75.1687694444",
          "zipcode": "19130",
          "country_id": 216,
          "locality_verbose": "Museum Towers, Philadelphia"
        },
        "switch_to_order_menu": 0,
        "cuisines": "Deli",
        "timings": "7 AM to 9 PM (Mon-Fri),8 AM to 8 PM (Sat-Sun)",
        "average_cost_for_two": 15,
        "price_range": 1,
        "currency": "$",
        "highlights": [
          "Credit Card",
          "Breakfast",
          "Takeaway Available",
          "Lunch"
        ],
        "offers": [],
        "opentable_support": 0,
        "is_zomato_book_res": 0,
        "mezzo_provider": "OTHER",
        "is_book_form_web_view": 0,
        "book_form_web_view_url": "",
        "book_again_url": "",
        "thumb": "",
        "user_rating": {
          "aggregate_rating": 0,
          "rating_text": "Not rated",
          "rating_color": "CBCBCB",
          "rating_obj": {
            "title": {
              "text": "-"
            },
            "bg_color": {
              "type": "grey",
              "tint": "400"
            }
          },
          "votes": 0
        },
        "all_reviews_count": 0,
        "photos_url": "https://www.zomato.com/philadelphia/museum-market-logan-square/photos?utm_source\u003dapi_basic_user\u0026utm_medium\u003dapi\u0026utm_campaign\u003dv2.1#tabtop",
        "photo_count": 2,
        "menu_url": "https://www.zomato.com/philadelphia/museum-market-logan-square/menu?utm_source\u003dapi_basic_user\u0026utm_medium\u003dapi\u0026utm_campaign\u003dv2.1\u0026openSwipeBox\u003dmenu\u0026showMinimal\u003d1#tabtop",
        "featured_image": "",
        "has_online_delivery": 0,
        "is_delivering_now": 0,
        "store_type": "",
        "include_bogo_offers": true,
        "deeplink": "zomato://restaurant/18026968",
        "is_table_reservation_supported": 0,
        "has_table_booking": 0,
        "events_url": "https://www.zomato.com/philadelphia/museum-market-logan-square/events#tabtop?utm_source\u003dapi_basic_user\u0026utm_medium\u003dapi\u0026utm_campaign\u003dv2.1",
        "phone_numbers": "Not available for this place",
        "all_reviews": {
          "reviews": []
        },
        "establishment": [
          "Deli"
        ]
      }
    },
    {
      "restaurant": {
        "R": {
          "has_menu_status": {
            "delivery": -1,
            "takeaway": -1
          },
          "res_id": 17022905,
          "is_grocery_store": false
        },
        "apikey": "82cf521776cb3d225ae238f11b7d69b1",
        "id": "17022905",
        "name": "Subway",
        "url": "https://www.zomato.com/philadelphia/subway-logan-square?utm_source\u003dapi_basic_user\u0026utm_medium\u003dapi\u0026utm_campaign\u003dv2.1",
        "location": {
          "address": "Museum Towers, 1800 Spring Garden Street, Philadelphia 19130",
          "locality": "Museum Towers",
          "city": "Philadelphia",
          "city_id": 287,
          "latitude": "39.9631055556",
          "longitude": "-75.1683972222",
          "zipcode": "19130",
          "country_id": 216,
          "locality_verbose": "Museum Towers, Philadelphia"
        },
        "switch_to_order_menu": 0,
        "cuisines": "Sandwich",
        "timings": "7 AM to 11 PM (Mon-Fri),11 AM to 9 PM (Sat-Sun)",
        "average_cost_for_two": 15,
        "price_range": 1,
        "currency": "$",
        "highlights": [
          "Credit Card",
          "Takeaway Available",
          "Breakfast",
          "Lunch",
          "Indoor Seating",
          "Vegetarian Friendly"
        ],
        "offers": [],
        "opentable_support": 0,
        "is_zomato_book_res": 0,
        "mezzo_provider": "OTHER",
        "is_book_form_web_view": 0,
        "book_form_web_view_url": "",
        "book_again_url": "",
        "thumb": "https://b.zmtcdn.com/data/res_imagery/17016448_CHAIN_21ae20ff55aa7f710865b8455e950830.jpg?fit\u003daround%7C200%3A200\u0026crop\u003d200%3A200%3B%2A%2C%2A",
        "user_rating": {
          "aggregate_rating": 0,
          "rating_text": "Not rated",
          "rating_color": "CBCBCB",
          "rating_obj": {
            "title": {
              "text": "-"
            },
            "bg_color": {
              "type": "grey",
              "tint": "400"
            }
          },
          "votes": 1
        },
        "all_reviews_count": 0,
        "photos_url": "https://www.zomato.com/philadelphia/subway-logan-square/photos?utm_source\u003dapi_basic_user\u0026utm_medium\u003dapi\u0026utm_campaign\u003dv2.1#tabtop",
        "photo_count": 2,
        "menu_url": "https://www.zomato.com/philadelphia/subway-logan-square/menu?utm_source\u003dapi_basic_user\u0026utm_medium\u003dapi\u0026utm_campaign\u003dv2.1\u0026openSwipeBox\u003dmenu\u0026showMinimal\u003d1#tabtop",
        "featured_image": "https://b.zmtcdn.com/data/res_imagery/17016448_CHAIN_21ae20ff55aa7f710865b8455e950830.jpg",
        "has_online_delivery": 0,
        "is_delivering_now": 0,
        "store_type": "",
        "include_bogo_offers": true,
        "deeplink": "zomato://restaurant/17022905",
        "is_table_reservation_supported": 0,
        "has_table_booking": 0,
        "events_url": "https://www.zomato.com/philadelphia/subway-logan-square/events#tabtop?utm_source\u003dapi_basic_user\u0026utm_medium\u003dapi\u0026utm_campaign\u003dv2.1",
        "phone_numbers": "(267) 639-2764",
        "all_reviews": {
          "reviews": []
        },
        "establishment": [
          "Sandwich Shop"
        ]
      }
    }
  ]
}]]>
            </line>
            <line>
              <![CDATA[
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=]]>
            </line>
            <line>
              <![CDATA[getting valid response body]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateentityidandtype -->
      </class> <!-- com.qa.TestCase.Location -->
    </test> <!-- Location -->
  </suite> <!-- Suite -->
</testng-results>
